#!/usr/bin/env python
PACKAGE = "n3ctrl"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Kp0", double_t, 0, "Kp0", 2.3, 0, 5)
gen.add("Kp1", double_t, 0, "Kp1", 2.3, 0, 5)
gen.add("Kp2", double_t, 0, "Kp2", 2.5, 0, 5)

gen.add("Kv0", double_t, 0, "Kv0", 3.0, 0, 5)
gen.add("Kv1", double_t, 0, "Kv1", 2.5, 0, 5)
gen.add("Kv2", double_t, 0, "Kv2", 5.5, 0, 10)

gen.add("Kvi0", double_t, 0, "Kvi0", 0.1, 0, 1)
gen.add("Kvi1", double_t, 0, "Kvi1", 0.1, 0, 1)
gen.add("Kvi2", double_t, 0, "Kvi2", 0.1, 0, 1)

gen.add("Ka0", double_t, 0, "Ka0", 1.0, 1, 1)
gen.add("Ka1", double_t, 0, "Ka1", 1.0, 1, 1)
gen.add("Ka2", double_t, 0, "Ka2", 1.0, 1, 1)

gen.add("Kap0", double_t, 0, "Kap0", 0, 0, 5)
gen.add("Kap1", double_t, 0, "Kap1", 0, 0, 5)
gen.add("Kap2", double_t, 0, "Kap2", 0, 0, 5)

gen.add("Kyaw", double_t, 0, "Kyaw", 20.0, 20, 20)

gen.add("hover_percent", double_t, 0, "hover_percent", 0.23, 0.2, 0.4)

size_enum = gen.enum([
    gen.const("Tianbo",      int_t, 0, "Original method from n3ctrl"),
    gen.const("Mellinger",   int_t, 1, "From Mellinger Thesis")],
    "Control strategy for n3ctrl")

gen.add("ctrl_strategy", int_t, 0, "Control strategy for n3ctrl", 0, 0, 1, edit_method=size_enum)

exit(gen.generate(PACKAGE, "n3ctrl", "Gains"))