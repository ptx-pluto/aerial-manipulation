package djiros;

public interface MissionWaypointTask extends org.ros.internal.message.Message {
  static final java.lang.String _TYPE = "djiros/MissionWaypointTask";
  static final java.lang.String _DEFINITION = "# constant for action_on_finish\nuint8 FINISH_NO_ACTION       = 0  # no action\nuint8 FINISH_RETURN_TO_HOME  = 1  # return to home\nuint8 FINISH_AUTO_LANDING    = 2  # auto landing\nuint8 FINISH_RETURN_TO_POINT = 3  # return to point 0\nuint8 FINISH_NO_EXIT         = 4  # infinite mode\uFFFD\uFFFD\uFFFD no exit\n\n# constant for yaw_mode\nuint8 YAW_MODE_AUTO     = 0       # auto mode (point to next waypoint)\nuint8 YAW_MODE_LOCK     = 1       # lock as an initial value\nuint8 YAW_MODE_RC       = 2       # controlled by RC\nuint8 YAW_MODE_WAYPOINT = 3       # use waypoint\'s yaw(tgt_yaw)\n\n# constant for trace_mode\nuint8 TRACE_POINT       = 0       # point to point, after reaching the target waypoint hover, complete waypt action (if any), then fly to the next waypt\nuint8 TRACE_COORDINATED = 1       # 1: Coordinated turn mode, smooth transition between waypts, no waypts task\n\n# constants for action_on_rc_lost\nuint8 ACTION_FREE       = 0       # exit waypoint and failsafe\nuint8 ACTION_AUTO       = 1       # continue the waypoint\n\n# constants for gimbal_pitch_mode\nuint8 GIMBAL_PITCH_FREE = 0       # free mode, no control on gimbal\nuint8 GIMBAL_PITCH_AUTO = 1       # auto mode, Smooth transition between waypoints on gimbal\n\nfloat32 velocity_range    # Maximum speed joystick input(2~15m)\nfloat32 idle_velocity     # Cruising Speed (without joystick input, no more than vel_cmd_range)\nuint8 action_on_finish    # See constants above for possible actions\nuint8 mission_exec_times  # 1: once ; 2: twice\nuint8 yaw_mode            # see constants above for possible yaw modes\nuint8 trace_mode          # see constants above for possible trace modes\nuint8 action_on_rc_lost   # see constants above for possible actions\nuint8 gimbal_pitch_mode   # see constants above for pissible gimbal modes\nMissionWaypoint[] mission_waypoint  # a vector of waypoints\n\n";
  static final boolean _IS_SERVICE = false;
  static final boolean _IS_ACTION = false;
  static final byte FINISH_NO_ACTION = 0;
  static final byte FINISH_RETURN_TO_HOME = 1;
  static final byte FINISH_AUTO_LANDING = 2;
  static final byte FINISH_RETURN_TO_POINT = 3;
  static final byte FINISH_NO_EXIT = 4;
  static final byte YAW_MODE_AUTO = 0;
  static final byte YAW_MODE_LOCK = 1;
  static final byte YAW_MODE_RC = 2;
  static final byte YAW_MODE_WAYPOINT = 3;
  static final byte TRACE_POINT = 0;
  static final byte TRACE_COORDINATED = 1;
  static final byte ACTION_FREE = 0;
  static final byte ACTION_AUTO = 1;
  static final byte GIMBAL_PITCH_FREE = 0;
  static final byte GIMBAL_PITCH_AUTO = 1;
  float getVelocityRange();
  void setVelocityRange(float value);
  float getIdleVelocity();
  void setIdleVelocity(float value);
  byte getActionOnFinish();
  void setActionOnFinish(byte value);
  byte getMissionExecTimes();
  void setMissionExecTimes(byte value);
  byte getYawMode();
  void setYawMode(byte value);
  byte getTraceMode();
  void setTraceMode(byte value);
  byte getActionOnRcLost();
  void setActionOnRcLost(byte value);
  byte getGimbalPitchMode();
  void setGimbalPitchMode(byte value);
  java.util.List<djiros.MissionWaypoint> getMissionWaypoint();
  void setMissionWaypoint(java.util.List<djiros.MissionWaypoint> value);
}
