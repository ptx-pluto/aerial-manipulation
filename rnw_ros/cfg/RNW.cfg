#!/usr/bin/env python
PACKAGE = "rnw_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("desired_nutation", double_t, 0, "desired nutation degree", 30, 0, 90)
gen.add("rocking_max_vel", double_t, 0, "max_vel for rocking", 2, 0, 5)
gen.add("rocking_max_acc", double_t, 0, "max_acc for rocking", 2, 0, 5)
gen.add("direct_control", bool_t, 0, "direct_control",  False)

gen.add("enable_energy_feedback", bool_t, 0, "enable_energy_feedback",  False)
gen.add("specify_energy", bool_t, 0, "specify_energy",  False)
gen.add("desired_energy", double_t, 0, "desired_energy", 1, 0, 10)
gen.add("EKp", double_t, 0, "EKp", 0.1, 0, 1)
gen.add("EKi", double_t, 0, "EKi", 0.1, 0, 1)

gen.add("phi_epsi", double_t, 0, "phi_epsi in degrees", 10, 0, 10)

gen.add("init_threshold", double_t, 0, "consider initialized when peak_phi_dot reaches this value", 1, 0, 5)
gen.add("init_tau", double_t, 0, "tau during init", 30, 0, 60)
gen.add("init_ang_vel_threshold", double_t, 0, "ang_vel_threshold during init", 0.1, 0, 1)
gen.add("init_min_step_interval", double_t, 0, "min_step_interval during init", 0.1, 0, 1)

gen.add("tau", double_t, 0, "tau feedforward", 30, 0, 60)
gen.add("ang_vel_threshold", double_t, 0, "ang_vel_threshold", 0.1, 0, 1)
gen.add("min_step_interval", double_t, 0, "min_step_interval", 0.1, 0, 1)

exit(gen.generate(PACKAGE, "rnw_ros", "RNW"))
